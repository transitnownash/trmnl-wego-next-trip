#!/bin/bash

# Simple script to bump version in VERSION file
# Usage: ./bump-version.sh [major|minor|patch]

set -e

CURRENT_VERSION=$(cat VERSION | tr -d '\n\r' | xargs)
TYPE=${1:-patch}

echo "Current version: $CURRENT_VERSION"

# Split version into parts
IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
MAJOR=${VERSION_PARTS[0]}
MINOR=${VERSION_PARTS[1]}
PATCH=${VERSION_PARTS[2]}

case $TYPE in
  major)
    MAJOR=$((MAJOR + 1))
    MINOR=0
    PATCH=0
    ;;
  minor)
    MINOR=$((MINOR + 1))
    PATCH=0
    ;;
  patch)
    PATCH=$((PATCH + 1))
    ;;
  *)
    echo "Usage: $0 [major|minor|patch]"
    echo "  major: Increment major version (x.0.0)"
    echo "  minor: Increment minor version (x.y.0)" 
    echo "  patch: Increment patch version (x.y.z)"
    exit 1
    ;;
esac

NEW_VERSION="$MAJOR.$MINOR.$PATCH"
echo "$NEW_VERSION" > VERSION

echo "Version bumped to: $NEW_VERSION"
echo ""
echo "Next steps:"
echo "1. Review your changes"
echo "2. Commit with: git add VERSION && git commit -m 'Bump version to $NEW_VERSION'"
echo "3. Push to trigger release: git push origin main"
